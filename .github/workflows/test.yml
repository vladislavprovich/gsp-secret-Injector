name: Test

on:
  push:
    branches:
      - '**'
      - '!develop'
      - '!main'
    paths-ignore:
      - 'docs/**'
      - '*.md'

  pull_request:
    branches:
      - 'develop'
      - 'main'

env:
  GOPROXY: https://proxy.golang.org
  CGO_ENABLED: 0

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x]
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run linter
        run: make lint

      - name: Run tests
        run: make test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: test/signals/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('test/signals/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build and Test Signal Forwarding
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            make build/linux_amd64
          else
            make build/darwin_amd64
          fi
          cp .bin/inject test/signals/bin
          cd test/signals
          yarn install --frozen-lockfile
          yarn build
          yarn start
